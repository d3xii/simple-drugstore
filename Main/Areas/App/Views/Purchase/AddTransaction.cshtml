@using MvcControls
@using MvcControls.Controls.Base
@using MvcControls.Controls.Button
@using MvcControls.Controls.DataGrid
@using MvcControls.Controls.Parameters
@using SDM.Domain.Models
@using ViewTexts = SDM.Main.Areas.App.Views.Purchase.Texts;
@using ModelTexts = SDM.Domain.Models.PurchaseTransactionModel.Texts;
@inherits WebViewPage<PurchaseTransactionModel>, ILocalizable<ViewTexts>, ILocalizable<ModelTexts>
@{
    var isAddMode = Model != null && Model.IsNew;
    ViewBag.Title = isAddMode ? this.Localize<ViewTexts>(t => t.AddTransaction) : this.Localize<ViewTexts>(t => t.EditTransaction);
}
@using (Html.BeginForm())
{
    <fieldset>
        <legend>@(this.Localize<ViewTexts>(t => t.HeaderInformation))</legend>
        <div>
            @Html.LabelFor(t => t.Time, this.Localize<ModelTexts>(t => t.Time))
            @Html.TextBoxFor(t => t.Time)
            @*@Html.LabelFor(t => t.Supplier, this.Localize<ModelTexts>(t => t.Supplier))
        @Html.TextBoxFor(t => t.Supplier)*@
            @Html.Custom().TextBox().Bind(t => t.Supplier).Settings(
                s =>
                    {
                        s.LabelText = this.Localize<ModelTexts>(t => t.Supplier);
                        s.AutoCompleteDataSource = new ActionParameter("GetSuppliers");
                    })
        </div>
        <div>
            @Html.ValidationSummary()
            @Html.Custom().Render((IHtmlControl)ViewBag.ResultMessage)
        </div>
    </fieldset>
    <fieldset>
        <legend>@(this.Localize<ViewTexts>(t => t.DetailInformation))</legend>
        @(Html.Custom().Grid(t => t.Details)
        .AddPropertyColumn("Item Name", "Item Name", t => t.ItemName)
        .AddPropertyColumn("Quantity", "Quantity", t => t.Quantity)
        .Settings(s =>
                      {
                          s.EditModule = new DataGridInlineFormEditModule
                                             {
                                                 NewLineContentUrl = new ActionParameter("AddOrEditTransactionDetail")
                                             };
                      })
        )
    </fieldset>
        
    @Html.Custom().Button().Settings(s =>
                                         {
                                             s.Text = this.Localize<ViewTexts>(t => isAddMode ? t.Shared.Add : t.Shared.Save);
                                             s.Type = ButtonControlInfo.ButtonType.Submit;
                                         })
    @Html.Custom().Button().Settings(s =>
                                         {
                                             s.Text = this.Localize<ViewTexts>(t => t.Shared.Cancel);
                                             s.Action = new ActionParameter("Transactions");
                                         })
}