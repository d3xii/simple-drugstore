@model SDM.Core.Configuration.Config
@{
    ViewBag.Title = "Admin Control Panel";
}

<script type="text/javascript">
    function OnTestDatabaseConnectionButtonClicked()
    {
        // get database information
        var serverName = $("@Html.IdFor(t => t.Sql.ServerName)").val();
        var databaseName = $("@Html.IdFor(t => t.Sql.DatabaseName)").val();
        var userName = $("@Html.IdFor(t => t.Sql.UserName)").val();
        var password = $("@Html.IdFor(t => t.Sql.Password)").val();
        
        // prepare ajax data
        var data = {
            serverName: serverName,
            databaseName: databaseName,
            userName: userName,
            password: password
        };

        // query
        $.post('@Url.Action("TestDatabaseConnection")', data, function(result)
        {
            alert(result);
        });
    }
</script>

<div>
    <h1>Admin Control Panel</h1>
</div>
@using (Html.BeginForm("SaveSettings", "AdminHome"))
{
    if (ViewBag.Result != null)
    {
    <span style="font-weight: bold">Result: @ViewBag.Result</span>
    <hr />
    }
    <fieldset>
        <legend>General Settings</legend>
        <ul>
            <li>
                @Html.LabelFor(t => t.AdminPassword)
                @Html.PasswordFor(t => t.AdminPassword, new { placeholder = "(not changed)" })
            </li>
        </ul>
    </fieldset>
    <fieldset>
        <legend>Database Settings</legend>
        <ul>
            <li>
                @Html.LabelFor(t => t.Sql.ServerName)
                @Html.TextBoxFor(t => t.Sql.ServerName)
            </li>
            <li>
                @Html.LabelFor(t => t.Sql.DatabaseName)
                @Html.TextBoxFor(t => t.Sql.DatabaseName)
            </li>
            <li>
                @Html.LabelFor(t => t.Sql.UserName)
                @Html.TextBoxFor(t => t.Sql.UserName)
            </li>
            <li>
                @Html.LabelFor(t => t.Sql.Password)
                @Html.PasswordFor(t => t.Sql.Password, new { placeholder = "(not changed)" })
            </li>
            <li>
                <label>Test database connection</label>
                <input type="button" value="Test" onclick="OnTestDatabaseConnectionButtonClicked()"/>
            </li>
        </ul>
    </fieldset>
    <input type="submit" value="Save" />
    @Html.ActionLink("Reset to default values", "ResetSettings")
    @:
    @Html.ActionLink("Return to homepage", "Index", "Home", new { area = string.Empty }, null)
}