@model SDM.ApplicationServices.Configuration.ConfigModel
@{
    ViewBag.Title = "Admin Control Panel";
}
<script type="text/javascript">
    function GetJsonModel(namePrefix)
    {
        // if the name prefix doesnt ends with ".", append one
        if (namePrefix.length > 0 && namePrefix[namePrefix.length - 1])
        {
            namePrefix += ".";
        }
        
        // prepare result
        var result = { };

        // get all inputs in this document
        var inputs = $("input");
        
        // for each input
        for (var i = 0; i < inputs.length; i++)
        {
            // get current input
            var input = inputs[i];
            
            // if input doesnt start from given name           
            if (input.name.substring(0, namePrefix.length) != namePrefix)
            {
                // skip it
                continue;
            }
            
            // take the remaining part
            var propertyName = input.name.substring(namePrefix.length);
            var propertyValue = input.value;
            
            // add to result
            result[propertyName] = propertyValue;
        }
        
        // return result
        return result;
    }

    function GetSqlConfigModel()
    {
        return GetJsonModel("@Html.NameFor(t => t.Sql)");
    }

    function btnTestDatabaseConnection_Clicked()
    {
        $.post('@Url.Action("TestDatabaseConnection")', GetSqlConfigModel(), function (result)
        {
            alert(result);
        });
    }

    function btnFormatDatabase_Clicked()
    {
//        $.post('@Url.Action("FormatDatabase")', GetSqlConfigModel(), function (result)
//        {
//            // save its original text
//            var button = $("#btnFormatDatabase");
//            var originalText = button.val();

//            // disable button and change the status
//            button.val("Processing...").attr("disabled", true);

//            // show result
//            alert(result);
//            
//            // enable it back
            //            button.val(originalText).attr("disabled", false);
            // if the result is "REDIRECT", switch to special address
//            if (result == "REDIRECT")
//            {
//                $("<form/>").attr("method", "post").attr("action", "@Url.Action("FormatDatabase")").submit();
//            }
//            // otherwise: show error
//            else
//            {
//                alert(result);
//            }            
        //        });
        //$("<form/>").attr("method", "post").attr("action", "@Url.Action("FormatDatabase")").submit();
        runner.run("@Url.Action("FormatDatabase")");
    }   
</script>
<div>
    <h1>
        Admin Control Panel</h1>
</div>
@using (Html.BeginForm("SaveSettings", "AdminHome"))
{
    if (ViewBag.Result != null)
    {
    <span style="font-weight: bold">Result: @ViewBag.Result</span>
    <hr />
    }
    <fieldset>
        <legend>General Settings</legend>
        <ul>
            <li>
                @Html.LabelFor(t => t.AdminPassword)
                @Html.PasswordFor(t => t.AdminPassword, new { placeholder = "(not changed)" })
            </li>
        </ul>
    </fieldset>
    <fieldset>
        <legend>Database Settings</legend>
        <ul>
            <li>
                @Html.LabelFor(t => t.Sql.ServerName)
                @Html.TextBoxFor(t => t.Sql.ServerName)
            </li>
            <li>
                @Html.LabelFor(t => t.Sql.DatabaseName)
                @Html.TextBoxFor(t => t.Sql.DatabaseName)
            </li>
            <li>
                @Html.LabelFor(t => t.Sql.UserName)
                @Html.TextBoxFor(t => t.Sql.UserName)
            </li>
            <li>
                @Html.LabelFor(t => t.Sql.Password)
                @Html.PasswordFor(t => t.Sql.Password, new { placeholder = "(not changed)" })
            </li>
            <li>
                <label>
                    Test</label>
                <button type="button" onclick="btnTestDatabaseConnection_Clicked()">
                    Test database connection</button>
            </li>
            <li>
                <label>
                    First-time use?</label>
                <button type="button" onclick="btnFormatDatabase_Clicked()">
                    Format database</button>
            </li>
        </ul>
    </fieldset>
    <input type="submit" value="Save" />
    @Html.ActionLink("Reset to default values", "ResetSettings")
    @:
    @Html.ActionLink("Return to homepage", "Index", "Home", new { area = string.Empty }, null)    
}
