@* ReSharper disable RedundantNameQualifier *@
@using MvcControls.Controls.Button
@inherits System.Web.Mvc.WebViewPage<MvcControls.Controls.Button.RenderInfo>
@* ReSharper restore RedundantNameQualifier *@
@{
    // define confirmation code, if needed
    string confirmationCode = Model.ConfirmationText != null ? string.Format("if (!confirm('{0}')) return", Model.ConfirmationText) : null;
}

@switch (Model.Type)
{
    case RenderInfo.ButtonType.Submit:
    <button type="submit" onclick="@confirmationCode">
        @Model.DisplayText
    </button>
   break;
    case RenderInfo.ButtonType.Post:
    <button type="button" onclick="@confirmationCode; $('<form/>').attr('action', '@Url.Action(Model.Action.ActionName, Model.Action.ControllerName, Model.Action.RouteValues)').attr('method', 'post').submit();">
        @Model.DisplayText
    </button>
   break;
   case RenderInfo.ButtonType.Default:    
    <button type="button" onclick="@confirmationCode; location.href = '@Url.Action(Model.Action.ActionName, Model.Action.ControllerName, Model.Action.RouteValues)'; ">
        @Model.DisplayText
    </button>
   break;
   default:
   throw new NotImplementedException();
}